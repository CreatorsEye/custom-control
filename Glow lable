using System;
using System.Collections.Generic;
using System.Drawing.Drawing2D;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ce
{



    public class GlowLabel : Label
    {
        private Color glowcolor = Color.Blue;
        public Color GlowColor {


            get { return glowcolor; }
            
            set { glowcolor= value; this.Invalidate(); } 
        
        
        } 
        private int glowsize = 10;
        public int GlowSize {


            get { return glowsize; }

            set { glowsize = value; this.Invalidate(); }
        }
        private Color shadowcolor = Color.White;
        public Color ShadowColor {
            get { return shadowcolor ; }

            set {shadowcolor = value; this.Invalidate(); }
        }
        private int shadowoffset = 5;
        public int ShadowOffset 
        {
            get { return shadowoffset; }

            set { shadowoffset= value; this.Invalidate(); }
        } 

        protected override void OnPaint(PaintEventArgs e)
        {
            e.Graphics.SmoothingMode = SmoothingMode.AntiAlias;
            e.Graphics.CompositingQuality = CompositingQuality.HighQuality;

            // Draw shadow
            using (GraphicsPath path = new GraphicsPath())
            {
                path.AddString(Text, Font.FontFamily, (int)Font.Style, Font.Size, new Point(ShadowOffset, ShadowOffset), StringFormat.GenericDefault);
                using (Pen pen = new Pen(ShadowColor, 1))
                {
                    e.Graphics.DrawPath(pen, path);
                    e.Graphics.FillPath(new SolidBrush(ShadowColor), path);
                }
            }

            // Draw glow
            using (GraphicsPath path = new GraphicsPath())
            {
                path.AddString(Text, Font.FontFamily, (int)Font.Style, Font.Size, Point.Empty, StringFormat.GenericDefault);
                using (Pen pen = new Pen(GlowColor, GlowSize) { LineJoin = LineJoin.Round })
                {
                    e.Graphics.DrawPath(pen, path);
                }
                e.Graphics.FillPath(new SolidBrush(ForeColor), path);
            }
        }
    }
}
